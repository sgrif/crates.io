# This file configures what to include in public database dumps. For each
# database table, we set which columns are included in the dump, and optionally
# how to filter the rows.
#
# tables.<table_name>.columns - a TOML dictionary determining what columns to
#     include. possible values are "private" (not included) and "public"
#     (included).
#
# tables.<table_name>.filter - a string that is a valid SQL expression, which
#     is used in a WHERE clause to filter the rows of the table.
#
# tables.<table_name>.dependencies - an array of table names, used to determine
#     the order of the tables in the generated import script. All tables
#     referred to by public columns in the current table should be listed, to
#     make sure they are imported before this table.
#
# tables.<table_name>.columns_defaults - a TOML dictionary mapping column names
#     to a raw SQL expression that is used as the default value for the column
#     on import. This is useful for private columns that are not nullable and
#     do not have a default.
#
# private_table - an array of tables to consider as completely private. This is
#     a shortcut for marking all columns of a table as private.

private_tables = [
    "__diesel_schema_migrations",
    "api_tokens",
    "background_jobs",
    "crate_owner_invitations",
    "emails",
    "follows",
    "publish_limit_buckets",
    "publish_rate_overrides",
    "readme_renderings",
    "version_owner_actions",
    "versions_published_by",
    "version_downloads_*",
]

[tables.badges]
dependencies = ["crates"]
[tables.badges.columns]
crate_id = "public"
badge_type = "public"
attributes = "public"

[tables.categories.columns]
id = "public"
category = "public"
slug = "public"
description = "public"
crates_cnt = "public"
created_at = "public"
path = "public"

[tables.crate_owners]
dependencies = ["crates", "users"]
filter = "NOT deleted"
[tables.crate_owners.columns]
crate_id = "public"
owner_id = "public"
created_at = "public"
created_by = "public"
deleted = "private"
updated_at = "private"
owner_kind = "public"
email_notifications = "private"

[tables.crates.columns]
id = "public"
name = "public"
updated_at = "public"
created_at = "public"
downloads = "public"
description = "public"
homepage = "public"
documentation = "public"
readme = "public"
textsearchable_index_col = "public"
repository = "public"
max_upload_size = "public"

[tables.crates_categories]
dependencies = ["categories", "crates"]
[tables.crates_categories.columns]
crate_id = "public"
category_id = "public"

[tables.crates_keywords]
dependencies = ["crates", "keywords"]
[tables.crates_keywords.columns]
crate_id = "public"
keyword_id = "public"

[tables.dependencies]
dependencies = ["crates", "versions"]
[tables.dependencies.columns]
id = "public"
version_id = "public"
crate_id = "public"
req = "public"
optional = "public"
default_features = "public"
features = "public"
target = "public"
kind = "public"

[tables.keywords.columns]
id = "public"
keyword = "public"
crates_cnt = "public"
created_at = "public"

[tables.metadata.columns]
total_downloads = "public"

[tables.reserved_crate_names.columns]
name = "public"

[tables.teams.columns]
id = "public"
login = "public"
github_id = "public"
name = "public"
avatar = "public"

[tables.users]
filter = """
id in (
    SELECT owner_id AS user_id FROM crate_owners WHERE NOT deleted AND owner_kind = 0
    UNION
    SELECT published_by as user_id FROM versions
)"""
[tables.users.columns]
id = "public"
gh_access_token = "private"
gh_login = "public"
name = "public"
gh_avatar = "public"
gh_id = "public"
[tables.users.column_defaults]
gh_access_token = "''"

[tables.version_authors]
dependencies = ["versions"]
[tables.version_authors.columns]
id = "public"
version_id = "public"
user_id = "private"
name = "public"

[tables.version_downloads]
# The version_downloads table is partitioned, so the COPY statements used for
# other tables does not work for this table. By using a filter of "TRUE", we
# trigger the use of a subquery in the COPY statement:
#
#     \copy (SELECT ... FROM "version_downloads" WHERE TRUE) TO ...
filter = "TRUE"
dependencies = ["versions"]
[tables.version_downloads.columns]
version_id = "public"
downloads = "public"
counted = "private"
date = "public"

[tables.versions]
dependencies = ["crates", "users"]
[tables.versions.columns]
id = "public"
crate_id = "public"
num = "public"
updated_at = "public"
created_at = "public"
downloads = "public"
features = "public"
yanked = "public"
license = "public"
crate_size = "public"
published_by = "public"
